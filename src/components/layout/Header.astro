---
import ThemeToggle from "../ThemeToggle.astro";
import Search from "../Search.astro";
import { menuLinks } from "@/site-config";

const url = new URL(Astro.request.url);
---

<header id="main-header" class="group relative mb-28 flex items-center sm:ps-[4.5rem]">
	<div class="flex sm:flex-col">
		<a
			href="/"
			class="inline-flex items-center grayscale hover:filter-none sm:relative sm:inline-block"
			aria-current={url.pathname === "/" ? "page" : false}
		>
			<svg
				class="me-3 h-10 w-6 sm:absolute sm:start-[-4.5rem] sm:me-0 sm:h-20 sm:w-12"
				aria-hidden="true"
				focusable="false"
				fill="none"
				xmlns="http://www.w3.org/2000/svg"
				viewBox="0 0 266.42 266.42"
			>
				<path
					d="m133.21,0C59.76,0,0,59.76,0,133.21s59.76,133.21,133.21,133.21,133.21-59.76,133.21-133.21S206.66,0,133.21,0Zm-39.97,159.94c-5.64,0-10.21-7.22-10.21-16.13,0-5.15,1.54-9.72,3.93-12.67l16.49,12.85c-.06,8.83-4.6,15.96-10.2,15.96Zm54.96-3.67c-4.89-.15-7.88-.44-9.41,3.86-1.53,4.3-5.58,5.18-5.58,5.18,0,0-4.05-.88-5.58-5.18-1.53-4.3-4.52-4.01-9.41-3.86-4.89.14-5.55-5.76.07-9.63,5.62-3.86,14.92-3.42,14.92-3.42,0,0,9.3-.44,14.92,3.42,5.62,3.87,4.96,9.78.07,9.63Zm24.95,3.67c-5.48,0-9.94-6.88-10.15-15.49l16.67-12.99c2.23,2.96,3.65,7.38,3.65,12.35,0,8.91-4.55,16.13-10.17,16.13Zm46.31,46.84c-9.16-28.66-17.94-55.49-21.2-73.45,0,0,4.72-.79,9.97-8,5.25-7.21.39-23.61-10.36-25.97-10.76-2.36-20.07,4.07-20.07,4.07,0,0-8.53-5.64-19.55-8.27-11.02-2.62-25.04-2.75-25.04-2.75,0,0-14.03.13-25.05,2.75-11.02,2.62-19.55,8.27-19.55,8.27,0,0-9.31-6.43-20.07-4.07-10.75,2.36-15.61,18.76-10.36,25.97,5.25,7.22,9.97,8,9.97,8-3.27,17.96-12.04,44.79-21.2,73.45-16.93-19.82-27.16-45.52-27.16-73.56,0-62.54,50.88-113.42,113.42-113.42s113.42,50.88,113.42,113.42c0,28.05-10.24,53.74-27.17,73.56Z"
					fill="currentColor"
					stroke-width="0"></path>
			</svg>
			<span class="text-xl font-bold sm:text-2xl">Furioursus</span>
		</a>
		<nav
			id="navigation-menu"
			class="absolute -inset-x-4 top-14 hidden flex-col items-end gap-y-4 rounded-md bg-bgColor/[.85] py-4 text-accent-2 shadow backdrop-blur group-[.menu-open]:z-50 group-[.menu-open]:flex sm:static sm:z-auto sm:-ms-4 sm:mt-1 sm:flex sm:flex-row sm:items-center sm:divide-x sm:divide-dashed sm:divide-accent sm:rounded-none sm:bg-transparent sm:py-0 sm:shadow-none sm:backdrop-blur-none dark:text-accent"
			aria-label="Main menu"
		>
			{
				menuLinks.map((link) => (
					<a
						href={link.path}
						class="px-4 py-4 sm:py-0 sm:hover:underline"
						aria-current={url.pathname === link.path ? "page" : false}
						data-astro-prefetch
					>
						{link.title}
					</a>
				))
			}
		</nav>
	</div>
	<Search />
	<ThemeToggle />
	<mobile-button>
		<button
			id="toggle-navigation-menu"
			class="group relative ms-4 h-7 w-7 sm:invisible sm:hidden"
			type="button"
			aria-label="Open main menu"
			aria-expanded="false"
			aria-haspopup="menu"
		>
			<svg
				id="line-svg"
				class="absolute start-1/2 top-1/2 h-full w-full -translate-x-1/2 -translate-y-1/2 transition-all group-aria-expanded:scale-0 group-aria-expanded:opacity-0"
				aria-hidden="true"
				focusable="false"
				xmlns="http://www.w3.org/2000/svg"
				fill="none"
				viewBox="0 0 24 24"
				stroke-width="1.5"
				stroke="currentColor"
			>
				<path stroke-linecap="round" stroke-linejoin="round" d="M3.75 9h16.5m-16.5 6.75h16.5"
				></path>
			</svg>
			<svg
				id="cross-svg"
				class="absolute start-1/2 top-1/2 h-full w-full -translate-x-1/2 -translate-y-1/2 scale-0 text-accent opacity-0 transition-all group-aria-expanded:scale-100 group-aria-expanded:opacity-100"
				class="text-accent"
				aria-hidden="true"
				focusable="false"
				xmlns="http://www.w3.org/2000/svg"
				fill="none"
				viewBox="0 0 24 24"
				stroke-width="1.5"
				stroke="currentColor"
			>
				<path stroke-linecap="round" stroke-linejoin="round" d="M6 18L18 6M6 6l12 12"></path>
			</svg>
		</button>
	</mobile-button>
</header>

<script>
	import { toggleClass } from "@/utils";

	class MobileNavBtn extends HTMLElement {
		private headerEl: HTMLElement;
		private mobileButtonEl: HTMLButtonElement;
		private menuOpen: boolean;

		constructor() {
			super();
			this.headerEl = document.getElementById("main-header")!;
			this.mobileButtonEl = this.querySelector("button") as HTMLButtonElement;
			this.menuOpen = false;

			this.mobileButtonEl.addEventListener("click", this.toggleMobileMenu);
		}

		toggleMobileMenu = () => {
			toggleClass(this.headerEl, "menu-open");
			this.menuOpen = !this.menuOpen;
			this.mobileButtonEl.setAttribute("aria-expanded", this.menuOpen.toString());
		};
	}

	customElements.define("mobile-button", MobileNavBtn);
</script>
